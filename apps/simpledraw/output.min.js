"use strict";exports.__esModule=true;var canvus_1=require("./canvus");var component_1=require("./component");var DrawManager=(function(){function a(c,b){this.mPointMap={};this.mStack=new Array();this.mRedo=new Array();this.mDrawElementMouseEventHandler=new Array();this.mCanvusBack=new canvus_1.MyCanvus(c,true);this.mCanvusFront=new canvus_1.MyCanvus(b);this.mCanvusFront.setStyle("#111","#d0e4b3","#111");this.mComponentManager=new component_1.ComponentManager(this);var d=this;this.mCanvusFront.mCallback={onStart:function(e){d.mComponentManager.onStart(e)},onEnd:function(e){d.mComponentManager.onEnd(e)},onMove:function(e){d.mComponentManager.onMove(e)}}}a.prototype.repaintBack=function(){var c=new Array();for(var d=0,b=this.mStack.reverse();d<b.length;d++){var e=b[d];c=c.concat(e)}this.mCanvusBack.draw(c);this.mCanvusFront.clearAll()};a.prototype.repaintBackWithoutSpacific=function(b){var d=new Array();for(var c=0;c<this.mStack.length;c++){if(c!=b){d=d.concat(this.mStack[c])}}this.mCanvusBack.draw(d.reverse())};a.prototype.insertToStack=function(b){this.mStack.push(b);for(var d=0,c=b;d<c.length;d++){var e=c[d];this.mPointMap[e.x+"#"+e.y]=this.mStack.length-1}};a.prototype.recomputeMap=function(){this.mPointMap=new Object();for(var c=0;c<this.mStack.length;c++){for(var d=0,b=this.mStack[c];d<b.length;d++){var e=b[d];this.mPointMap[e.x+"#"+e.y]=c}}};a.prototype.undo=function(){if(this.mStack.length>0){this.mRedo.push(this.mStack.pop())}this.repaintBack()};a.prototype.redo=function(){if(this.mRedo.length>0){this.mStack.push(this.mRedo.pop())}this.repaintBack()};a.prototype.clearAll=function(){this.mCanvusBack.clearAll();this.mStack=new Array();this.mRedo=new Array();this.repaintBack()};a.prototype.attach=function(b){this.mDrawElementMouseEventHandler.push(b)};a.prototype.getStackIndexForPoint=function(b){if(this.mPointMap[b.x+"#"+b.y]!=undefined){return this.mPointMap[b.x+"#"+b.y]}else{return -1}};a.prototype.getStackPoints=function(b){return this.mStack[b]};a.prototype.drawFront=function(b){this.mCanvusFront.draw(b)};a.prototype.drawBack=function(b){this.insertToStack(b);this.mCanvusFront.clearAll();this.repaintBack()};a.prototype.drawBackWithReplace=function(c,b){this.mStack[b]=c;this.repaintBack();this.recomputeMap()};a.prototype.drawBackWithoutSpacific=function(b){this.repaintBackWithoutSpacific(b)};return a}());exports.DrawManager=DrawManager;var mDrawManager=new DrawManager("canvas","canvas1");mDrawManager.attach(new component_1.TestPoint());